The ``MyList`` module
======================

Using ``MyList``
----------------

This is a test file for the MyList class that inherits from list.

First, let's create the class:

    >>> MyList = __import__('1-my_list').MyList

Test basic functionality:

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test with empty list:

    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []

Test with single element:

    >>> single_list = MyList()
    >>> single_list.append(42)
    >>> single_list.print_sorted()
    [42]

Test with negative numbers:

    >>> neg_list = MyList()
    >>> neg_list.append(-1)
    >>> neg_list.append(-5)
    >>> neg_list.append(-3)
    >>> neg_list.print_sorted()
    [-5, -3, -1]

Test with mixed positive and negative numbers:

    >>> mixed_list = MyList()
    >>> mixed_list.append(5)
    >>> mixed_list.append(-2)
    >>> mixed_list.append(0)
    >>> mixed_list.append(3)
    >>> mixed_list.append(-1)
    >>> mixed_list.print_sorted()
    [-2, -1, 0, 3, 5]

Test with duplicates:

    >>> dup_list = MyList()
    >>> dup_list.append(3)
    >>> dup_list.append(1)
    >>> dup_list.append(3)
    >>> dup_list.append(1)
    >>> dup_list.print_sorted()
    [1, 1, 3, 3]

Test that MyList inherits from list:

    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test that original list is not modified:

    >>> my_list = MyList([5, 2, 8, 1])
    >>> my_list.print_sorted()
    [1, 2, 5, 8]
    >>> print(my_list)
    [5, 2, 8, 1]

Test with list initialization:

    >>> init_list = MyList([10, 5, 15])
    >>> init_list.print_sorted()
    [5, 10, 15]

Test with large numbers:

    >>> large_list = MyList()
    >>> large_list.append(1000000)
    >>> large_list.append(1)
    >>> large_list.append(999999)
    >>> large_list.print_sorted()
    [1, 999999, 1000000]

Test multiple calls to print_sorted:

    >>> test_list = MyList([3, 1, 2])
    >>> test_list.print_sorted()
    [1, 2, 3]
    >>> test_list.print_sorted()
    [1, 2, 3]
    >>> print(test_list)
    [3, 1, 2]
